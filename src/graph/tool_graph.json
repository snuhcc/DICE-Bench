{
  "nodes": [
    {
      "function": "get_weather",
      "desc": "Retrieve weather information for a specific location and date.",
      "parameters": [
        {
          "name": "location",
          "type": "string",
          "desc": "The city or region to get the weather information for (e.g. 'New York')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date in MM-DD format (e.g. '04-15')."
        }
      ],
      "return": {
        "weather": "string"
      }
    },
    {
      "function": "get_news_for_topic",
      "desc": "Fetch news headlines related to a given topic.",
      "parameters": [
        {
          "name": "topic",
          "type": "string",
          "desc": "A keyword or topic to search news for (e.g. 'technology')."
        }
      ],
      "return": {
        "news_headlines": "string"
      }
    },
    {
      "function": "get_crypto_price",
      "desc": "Retrieve the price of a specific cryptocurrency on a specific date.",
      "parameters": [
        {
          "name": "currency",
          "type": "string",
          "desc": "Name of the cryptocurrency (e.g. 'bitcoin')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date in MM-DD format (e.g. '06-20') for which you want the price."
        }
      ],
      "return": {
        "price": "number"
      }
    },
    {
      "function": "get_stock_price",
      "desc": "Retrieve the current price of a specific stock.",
      "parameters": [
        {
          "name": "stock",
          "type": "string",
          "desc": "Stock symbol or name (e.g. 'AAPL')."
        }
      ],
      "return": {
        "price": "number"
      }
    },
    {
      "function": "buy_stock",
      "desc": "Buy shares of a specific stock.",
      "parameters": [
        {
          "name": "stock",
          "type": "string",
          "desc": "Stock symbol or name (e.g. 'AAPL') to buy."
        },
        {
          "name": "shares",
          "type": "number",
          "desc": "Number of shares you want to purchase (e.g. 10)."
        }
      ],
      "return": {
        "stock_name": "string",
        "shares_bought": "number"
      }
    },
    {
      "function": "sell_stock",
      "desc": "Sell shares of a specific stock.",
      "parameters": [
        {
          "name": "stock",
          "type": "string",
          "desc": "Stock symbol or name (e.g. 'AAPL') to sell."
        },
        {
          "name": "shares",
          "type": "number",
          "desc": "Number of shares you want to sell (e.g. 5)."
        }
      ],
      "return": {
        "stock_name": "string",
        "shares_sold": "number"
      }
    },
    {
      "function": "book_flight",
      "desc": "Book a flight from a location to a destination on a specific date.",
      "parameters": [
        {
          "name": "date",
          "type": "string",
          "desc": "Flight departure date in MM-DD format (e.g. '09-15')."
        },
        {
          "name": "from",
          "type": "string",
          "desc": "Departure airport or city (e.g. 'JFK')."
        },
        {
          "name": "to",
          "type": "string",
          "desc": "Arrival airport or city (e.g. 'LAX')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Departure time in HH:MM 24-hour format (e.g. '09:30')."
        }
      ],
      "return": {
        "flight_number": "string",
        "departure_date": "string",
        "departure_time": "string",
        "from": "string",
        "to": "string",
        "reservation_id": "string"
      }
    },
    {
      "function": "check_flight_status",
      "desc": "Check the real-time status of a flight.",
      "parameters": [
        {
          "name": "flight_number",
          "type": "string",
          "desc": "Flight number (e.g. 'AA100') to check status for."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date in MM-DD format (e.g. '09-15') of the flight."
        }
      ],
      "return": {
        "flight_status": "string"
      }
    },
    {
      "function": "find_hotel",
      "desc": "Find a hotel in a specific location with a specified check-in date.",
      "parameters": [
        {
          "name": "location",
          "type": "string",
          "desc": "City or region to search for hotels (e.g. 'Las Vegas')."
        },
        {
          "name": "check_in",
          "type": "string",
          "desc": "Check-in date in MM-DD format (e.g. '10-05')."
        }
      ],
      "return": {
        "hotel_name": "string"
      }
    },
    {
      "function": "book_hotel",
      "desc": "Book a specific hotel on a given date and location.",
      "parameters": [
        {
          "name": "hotel_name",
          "type": "string",
          "desc": "Name of the hotel to book (e.g. 'Grand Hyatt')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "City or region of the hotel (e.g. 'Las Vegas')."
        },
        {
          "name": "check_in_date",
          "type": "string",
          "desc": "Check-in date in MM-DD format (e.g. '10-05')."
        },
        {
          "name": "check_in_time",
          "type": "string",
          "desc": "Approximate check-in time (HH:MM, 24-hour) (e.g. '15:00')."
        }
      ],
      "return": {
        "hotel_name": "string",
        "location": "string",
        "check_in_date": "string",
        "check_in_time": "string",
        "reservation_id": "string"
      }
    },
    {
      "function": "find_restaurants",
      "desc": "Find restaurants based on cuisine type and location.",
      "parameters": [
        {
          "name": "cuisine",
          "type": "string",
          "desc": "Type of cuisine (e.g. 'Italian')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "City or area to search for restaurants (e.g. 'San Francisco')."
        }
      ],
      "return": {
        "restaurant_name": "string"
      }
    },
    {
      "function": "book_restaurant",
      "desc": "Book a table at a specific restaurant on a certain date/time.",
      "parameters": [
        {
          "name": "restaurant_name",
          "type": "string",
          "desc": "Name of the restaurant to reserve a table at (e.g. 'Olive Garden')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date for the reservation in MM-DD format (e.g. '03-10')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Time for the reservation in HH:MM (24-hour) format (e.g. '19:00')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Restaurant's location or address (e.g. '123 Main St')."
        }
      ],
      "return": {
        "restaurant_name": "string",
        "reservation_date": "string",
        "reservation_time": "string",
        "location": "string",
        "booking_id": "string"
      }
    },
    {
      "function": "order_food_dinein",
      "desc": "Place a dine-in order for a specific menu item at a restaurant.",
      "parameters": [
        {
          "name": "restaurant_name",
          "type": "string",
          "desc": "Name of the restaurant where you want to dine in."
        },
        {
          "name": "item",
          "type": "string",
          "desc": "Menu item to order (e.g. 'Margherita Pizza')."
        }
      ],
      "return": {
        "order_status": "string"
      }
    },
    {
      "function": "order_food_delivery",
      "desc": "Order a specific food item for delivery to a location via a chosen platform.",
      "parameters": [
        {
          "name": "food",
          "type": "string",
          "desc": "Name of the food item to order (e.g. 'Pepperoni Pizza')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Delivery address (e.g. '123 Main St')."
        },
        {
          "name": "platform",
          "type": "string",
          "desc": "Delivery service platform (e.g. 'Uber Eats')."
        }
      ],
      "return": {
        "order_details": "string"
      }
    },
    {
      "function": "find_car",
      "desc": "Search for available rental cars on a given date and location.",
      "parameters": [
        {
          "name": "date",
          "type": "string",
          "desc": "Pickup date in MM-DD format (e.g. '07-01')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "City or location to pick up the rental car (e.g. 'Miami')."
        }
      ],
      "return": {
        "car_name": "string"
      }
    },
    {
      "function": "book_car",
      "desc": "Book a car rental for a specified date, time, and location.",
      "parameters": [
        {
          "name": "car_name",
          "type": "string",
          "desc": "Name or model of the car to rent (e.g. 'Toyota Camry')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "City or location to pick up the rental car (e.g. 'Miami')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Pickup date in MM-DD format (e.g. '07-02')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Pickup time in HH:MM (24-hour) format (e.g. '10:30')."
        }
      ],
      "return": {
        "car_name": "string",
        "location": "string",
        "date": "string",
        "time": "string",
        "reservation_id": "string"
      }
    },
    {
      "function": "order_taxi",
      "desc": "Order a taxi to a location using a specified platform.",
      "parameters": [
        {
          "name": "location",
          "type": "string",
          "desc": "Pickup address or location (e.g. '55 5th Ave')."
        },
        {
          "name": "platform",
          "type": "string",
          "desc": "Taxi service platform (e.g. 'Uber')."
        }
      ],
      "return": {
        "ride_details": "string"
      }
    },
    {
      "function": "check_balance",
      "desc": "Check account balance for a given bank, account type, and currency.",
      "parameters": [
        {
          "name": "bank",
          "type": "string",
          "desc": "Name of the bank (e.g. 'Chase')."
        },
        {
          "name": "account_type",
          "type": "string",
          "desc": "Account type (e.g. 'savings', 'checking')."
        },
        {
          "name": "currency",
          "type": "string",
          "desc": "Currency code (e.g. 'USD')."
        }
      ],
      "return": {
        "account_balance": "number"
      }
    },
    {
      "function": "withdraw_cash",
      "desc": "Withdraw a specific amount of cash from a bank in a certain currency.",
      "parameters": [
        {
          "name": "bank",
          "type": "string",
          "desc": "Name of the bank to withdraw from (e.g. 'Chase')."
        },
        {
          "name": "amount",
          "type": "number",
          "desc": "Amount of money to withdraw (e.g. 200)."
        },
        {
          "name": "currency",
          "type": "string",
          "desc": "Currency code (e.g. 'USD')."
        }
      ],
      "return": {
        "transaction_status": "string"
      }
    },
    {
      "function": "pay_for_credit_card",
      "desc": "Pay the balance for a given credit card.",
      "parameters": [
        {
          "name": "credit_card",
          "type": "string",
          "desc": "Credit card identifier (e.g. last 4 digits)."
        }
      ],
      "return": {
        "payment_status": "string"
      }
    },
    {
      "function": "shop_online",
      "desc": "Purchase a product from an online shopping platform.",
      "parameters": [
        {
          "name": "website",
          "type": "string",
          "desc": "Website or marketplace to buy from (e.g. 'Amazon')."
        },
        {
          "name": "product",
          "type": "string",
          "desc": "Name or description of the product (e.g. 'wireless mouse')."
        }
      ],
      "return": {
        "order_details": "string"
      }
    },
    {
      "function": "sell_item_online",
      "desc": "List an item for sale at an online marketplace.",
      "parameters": [
        {
          "name": "item",
          "type": "string",
          "desc": "Name/description of the item to sell (e.g. 'used iPhone X')."
        },
        {
          "name": "store",
          "type": "string",
          "desc": "Online marketplace (e.g. 'Ebay')."
        }
      ],
      "return": {
        "sold_item": "string"
      }
    },
    {
      "function": "send_email",
      "desc": "Send an email to a specified address.",
      "parameters": [
        {
          "name": "email_address",
          "type": "string",
          "desc": "Recipient's email address (e.g. 'john@example.com')."
        },
        {
          "name": "content",
          "type": "string",
          "desc": "Body text of the email."
        }
      ],
      "return": {
        "email_status": "string"
      }
    },
    {
      "function": "send_sms",
      "desc": "Send an SMS message to a given phone number.",
      "parameters": [
        {
          "name": "phone_number",
          "type": "string",
          "desc": "Destination phone number (e.g. '+1 555-1234')."
        },
        {
          "name": "content",
          "type": "string",
          "desc": "Text content of the SMS message."
        }
      ],
      "return": {
        "sms_status": "string"
      }
    },
    {
      "function": "share_by_social_network",
      "desc": "Share content via a specific social network.",
      "parameters": [
        {
          "name": "content",
          "type": "string",
          "desc": "Text or link to share."
        },
        {
          "name": "social_network",
          "type": "string",
          "desc": "Name of the social platform (e.g. 'Facebook')."
        }
      ],
      "return": {
        "share_status": "string"
      }
    },
    {
      "function": "search_by_engine",
      "desc": "Search a query on a chosen search engine.",
      "parameters": [
        {
          "name": "query",
          "type": "string",
          "desc": "Search keywords (e.g. 'best restaurants in NYC')."
        },
        {
          "name": "engine",
          "type": "string",
          "desc": "Search engine to use (e.g. 'Google')."
        }
      ],
      "return": {
        "search_results": "string"
      }
    },
    {
      "function": "schedule_appointment",
      "desc": "Schedule an appointment for a service at a date/time/location.",
      "parameters": [
        {
          "name": "service",
          "type": "string",
          "desc": "Type of service (e.g. 'dentist')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date of the appointment in MM-DD format (e.g. '08-23')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Time of the appointment in HH:MM (24-hour) format (e.g. '14:30')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Physical location or address for the appointment (e.g. '123 Dental St.')."
        }
      ],
      "return": {
        "service": "string",
        "date": "string",
        "time": "string",
        "location": "string",
        "appointment_id": "string"
      }
    },
    {
      "function": "make_video_call",
      "desc": "Start a video call to a given phone number.",
      "parameters": [
        {
          "name": "phone_number",
          "type": "string",
          "desc": "Recipient's phone number for the video call (e.g. '+1 555-1234')."
        }
      ],
      "return": {
        "call_status": "string"
      }
    },
    {
      "function": "make_voice_call",
      "desc": "Start a voice call to a given phone number.",
      "parameters": [
        {
          "name": "phone_number",
          "type": "string",
          "desc": "Recipient's phone number for the voice call (e.g. '+1 555-1234')."
        }
      ],
      "return": {
        "call_status": "string"
      }
    },
    {
      "function": "organize_meeting_online",
      "desc": "Organize an online meeting about a given topic.",
      "parameters": [
        {
          "name": "topic",
          "type": "string",
          "desc": "Subject or agenda of the online meeting (e.g. 'Project Kickoff')."
        },
        {
          "name": "meeting_time",
          "type": "string",
          "desc": "Scheduled time for the meeting in HH:MM (24-hour) format (e.g. '10:00')."
        }
      ],
      "return": {
        "topic": "string",
        "meeting_time": "string",
        "meeting_status": "string"
      }
    },
    {
      "function": "attend_meeting_online",
      "desc": "Attend an online meeting about a specific topic.",
      "parameters": [
        {
          "name": "topic",
          "type": "string",
          "desc": "Topic or name of the online meeting to join (e.g. 'Project Kickoff')."
        }
      ],
      "return": {
        "attendance_status": "string"
      }
    },
    {
      "function": "apply_for_job",
      "desc": "Apply for a specific job.",
      "parameters": [
        {
          "name": "job",
          "type": "string",
          "desc": "Job position/title to apply for (e.g. 'Software Engineer')."
        }
      ],
      "return": {
        "application_status": "string"
      }
    },
    {
      "function": "buy_insurance",
      "desc": "Purchase an insurance policy from a given company.",
      "parameters": [
        {
          "name": "insurance",
          "type": "string",
          "desc": "Type or name of the insurance (e.g. 'health insurance')."
        },
        {
          "name": "company",
          "type": "string",
          "desc": "Insurance provider (e.g. 'Allianz')."
        }
      ],
      "return": {
        "insurance_details": "string"
      }
    },
    {
      "function": "deliver_package",
      "desc": "Deliver a package to a given destination.",
      "parameters": [
        {
          "name": "package",
          "type": "string",
          "desc": "Description or ID of the package (e.g. 'Order #12345')."
        },
        {
          "name": "destination",
          "type": "string",
          "desc": "Address or location to deliver the package (e.g. '456 Market St.')."
        }
      ],
      "return": {
        "delivery_status": "string"
      }
    },
    {
      "function": "connect_bluetooth_device",
      "desc": "Set up a Bluetooth connection with a specific device.",
      "parameters": [
        {
          "name": "device_name",
          "type": "string",
          "desc": "Bluetooth device name or ID (e.g. 'JBL Speaker')."
        }
      ],
      "return": {
        "connection_status": "string"
      }
    },
    {
      "function": "play_music",
      "desc": "Play a specific piece of music, optionally via a Bluetooth device.",
      "parameters": [
        {
          "name": "music_name",
          "type": "string",
          "desc": "Title of the music to play (e.g. 'Shape of You')."
        },
        {
          "name": "device_name",
          "type": "string",
          "desc": "Bluetooth device name if playback should happen on a paired device (optional)."
        }
      ],
      "return": {
        "play_status": "string"
      }
    },
    {
      "function": "play_music_by_artist_and_genre",
      "desc": "Play music matching a given artist and genre.",
      "parameters": [
        {
          "name": "genre",
          "type": "string",
          "desc": "Genre of music (e.g. 'pop')."
        },
        {
          "name": "artist",
          "type": "string",
          "desc": "Name of the artist (e.g. 'Taylor Swift')."
        }
      ],
      "return": {
        "music_status": "string"
      }
    },
    {
      "function": "play_music_by_title",
      "desc": "Play a specific music track by its title.",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "desc": "Exact title of the song (e.g. 'Bohemian Rhapsody')."
        }
      ],
      "return": {
        "music_status": "string"
      }
    },
    {
      "function": "get_music_recommendation",
      "desc": "Get music recommendations based on genre, mood, or artist.",
      "parameters": [
        {
          "name": "genre",
          "type": "string",
          "desc": "Music genre preference (e.g. 'R&B')."
        },
        {
          "name": "mood",
          "type": "string",
          "desc": "Mood or vibe (e.g. 'chill')."
        },
        {
          "name": "artist",
          "type": "string",
          "desc": "Optional artist to base recommendations on (e.g. 'Ed Sheeran')."
        }
      ],
      "return": {
        "recommended_tracks": "string"
      }
    },
    {
      "function": "get_movie_recommendation",
      "desc": "Get movie recommendations based on genre, mood, or actor.",
      "parameters": [
        {
          "name": "genre",
          "type": "string",
          "desc": "Movie genre (e.g. 'action', 'comedy')."
        },
        {
          "name": "mood",
          "type": "string",
          "desc": "Movie mood (e.g. 'romantic')."
        },
        {
          "name": "actor",
          "type": "string",
          "desc": "Optional actor name to base recommendations on (e.g. 'Tom Hanks')."
        }
      ],
      "return": {
        "recommended_movie": "string"
      }
    },
    {
      "function": "play_movie",
      "desc": "Play a movie by title.",
      "parameters": [
        {
          "name": "movie_title",
          "type": "string",
          "desc": "Exact title of the movie (e.g. 'Inception')."
        }
      ],
      "return": {
        "movie_status": "string"
      }
    },
    {
      "function": "take_note",
      "desc": "Create or append a note with the given content.",
      "parameters": [
        {
          "name": "content",
          "type": "string",
          "desc": "Text content to save in the note."
        }
      ],
      "return": {
        "note_status": "string"
      }
    },
    {
      "function": "borrow_book_online",
      "desc": "Borrow a specific book from an online library.",
      "parameters": [
        {
          "name": "book",
          "type": "string",
          "desc": "Title or ID of the book to borrow (e.g. 'Harry Potter')."
        },
        {
          "name": "library",
          "type": "string",
          "desc": "Name of the online library or service (e.g. 'Kindle Store')."
        }
      ],
      "return": {
        "borrow_status": "string"
      }
    },
    {
      "function": "recording_audio",
      "desc": "Record audio with given content or purpose.",
      "parameters": [
        {
          "name": "content",
          "type": "string",
          "desc": "Description or reason for the recording (e.g. 'Meeting notes')."
        }
      ],
      "return": {
        "recording_status": "string"
      }
    },
    {
      "function": "print_document",
      "desc": "Print a specified document.",
      "parameters": [
        {
          "name": "document",
          "type": "string",
          "desc": "File name or path of the document (e.g. 'report.pdf')."
        }
      ],
      "return": {
        "print_status": "string"
      }
    },
    {
      "function": "set_alarm",
      "desc": "Set an alarm for a specific time (optionally location-based).",
      "parameters": [
        {
          "name": "time",
          "type": "string",
          "desc": "Alarm time in HH:MM format (e.g. '07:00')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Optional location context to trigger alarm (e.g. 'Home')."
        }
      ],
      "return": {
        "alarm_time": "string",
        "alarm_set_status": "string"
      }
    },
    {
      "function": "calculate_bmi",
      "desc": "Calculate BMI using height (cm) and weight (kg).",
      "parameters": [
        {
          "name": "height",
          "type": "number",
          "desc": "Height in centimeters (e.g. 170)."
        },
        {
          "name": "weight",
          "type": "number",
          "desc": "Weight in kilograms (e.g. 65)."
        }
      ],
      "return": {
        "bmi_value": "number"
      }
    },
    {
      "function": "track_parcel",
      "desc": "Track a parcel's delivery status by its tracking number.",
      "parameters": [
        {
          "name": "tracking_number",
          "type": "string",
          "desc": "Parcel's tracking code (e.g. '1Z999AA10123456784')."
        }
      ],
      "return": {
        "delivery_status": "string"
      }
    },
    {
      "function": "add_item",
      "desc": "Add an item to a shopping list, specifying quantity.",
      "parameters": [
        {
          "name": "item",
          "type": "string",
          "desc": "Name of the item to add (e.g. 'milk')."
        },
        {
          "name": "quantity",
          "type": "number",
          "desc": "Quantity of the item (e.g. 2)."
        }
      ],
      "return": {
        "list_status": "string"
      }
    },
    {
      "function": "remove_item",
      "desc": "Remove an item from the shopping list.",
      "parameters": [
        {
          "name": "item",
          "type": "string",
          "desc": "Name of the item to remove (e.g. 'milk')."
        }
      ],
      "return": {
        "list_status": "string"
      }
    },
    {
      "function": "update_item",
      "desc": "Update the quantity of an existing item in the shopping list.",
      "parameters": [
        {
          "name": "item",
          "type": "string",
          "desc": "Name of the item to update (e.g. 'milk')."
        },
        {
          "name": "quantity",
          "type": "number",
          "desc": "New quantity for the item (e.g. 3)."
        }
      ],
      "return": {
        "list_status": "string"
      }
    },
    {
      "function": "convert_currency",
      "desc": "Convert an amount from one currency to another using exchange rates.",
      "parameters": [
        {
          "name": "amount",
          "type": "number",
          "desc": "Amount of money to convert (e.g. 100)."
        },
        {
          "name": "from_currency",
          "type": "string",
          "desc": "Source currency code (e.g. 'USD')."
        },
        {
          "name": "to_currency",
          "type": "string",
          "desc": "Target currency code (e.g. 'EUR')."
        }
      ],
      "return": {
        "conversion_result": "number"
      }
    },
    {
      "function": "check_traffic",
      "desc": "Check traffic congestion and estimated travel time between two locations.",
      "parameters": [
        {
          "name": "start_location",
          "type": "string",
          "desc": "Starting location or address (e.g. 'Brooklyn')."
        },
        {
          "name": "end_location",
          "type": "string",
          "desc": "Destination location or address (e.g. 'Manhattan')."
        }
      ],
      "return": {
        "traffic_info": "string"
      }
    },
    {
      "function": "find_local_event",
      "desc": "Search for local events happening in a place on a certain date.",
      "parameters": [
        {
          "name": "location",
          "type": "string",
          "desc": "City or region to find events (e.g. 'Chicago')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Event date in MM-DD format (optional, e.g. '05-20')."
        }
      ],
      "return": {
        "event_name": "string"
      }
    },
    {
      "function": "track_water_intake",
      "desc": "Record daily water intake.",
      "parameters": [
        {
          "name": "amount",
          "type": "number",
          "desc": "Amount of water consumed in milliliters (e.g. 250)."
        }
      ],
      "return": {
        "hydration_status": "string"
      }
    },
    {
      "function": "create_fitness_plan",
      "desc": "Generate a personalized workout plan based on a goal.",
      "parameters": [
        {
          "name": "goal",
          "type": "string",
          "desc": "Fitness goal (e.g. 'muscle building')."
        },
        {
          "name": "duration_weeks",
          "type": "number",
          "desc": "Length of the workout plan in weeks (e.g. 8)."
        }
      ],
      "return": {
        "fitness_plan": "string"
      }
    },
    {
      "function": "set_reminder",
      "desc": "Set a reminder for a task with optional date/time/location.",
      "parameters": [
        {
          "name": "reminder_task",
          "type": "string",
          "desc": "Description of the task to be reminded about (e.g. 'Buy groceries')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Optional date in MM-DD format (e.g. '06-01')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Optional time in HH:MM (24-hour) format (e.g. '18:00')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Optional location for the reminder trigger (e.g. 'Home')."
        }
      ],
      "return": {
        "reminder_confirmation": "string"
      }
    },
    {
      "function": "analyze_sleep",
      "desc": "Analyze sleep pattern data.",
      "parameters": [
        {
          "name": "sleep_data",
          "type": "string",
          "desc": "Sleep data in JSON or a chosen format (e.g. detailed sleep log)."
        }
      ],
      "return": {
        "sleep_analysis": "string"
      }
    },
    {
      "function": "translate_text",
      "desc": "Translate text from a source language to a target language.",
      "parameters": [
        {
          "name": "source_text",
          "type": "string",
          "desc": "Text to be translated."
        },
        {
          "name": "source_language",
          "type": "string",
          "desc": "Language code of the original text (e.g. 'en')."
        },
        {
          "name": "target_language",
          "type": "string",
          "desc": "Language code to translate into (e.g. 'fr')."
        }
      ],
      "return": {
        "translated_text": "string"
      }
    },
    {
      "function": "summarize_text",
      "desc": "Generate a summary for a given text.",
      "parameters": [
        {
          "name": "text_name",
          "type": "string",
          "desc": "Name or ID of the text to summarize (e.g. 'article1')."
        }
      ],
      "return": {
        "text_summary": "string"
      }
    },
    {
      "function": "monitor_expenses",
      "desc": "Record or manage expenses by date, category, amount.",
      "parameters": [
        {
          "name": "date",
          "type": "string",
          "desc": "Date of the expense in MM-DD format (e.g. '06-10')."
        },
        {
          "name": "category",
          "type": "string",
          "desc": "Expense category (e.g. 'food')."
        },
        {
          "name": "amount",
          "type": "number",
          "desc": "Amount of the expense (e.g. 20.5)."
        }
      ],
      "return": {
        "expense_status": "string"
      }
    },
    {
      "function": "recommend_recipe",
      "desc": "Suggest recipes given certain ingredients and dietary preferences.",
      "parameters": [
        {
          "name": "ingredients",
          "type": "string",
          "desc": "Comma-separated list of ingredients (e.g. 'tomato,onion,cheese')."
        },
        {
          "name": "dietary_preference",
          "type": "string",
          "desc": "Optional dietary preference (e.g. 'vegan')."
        }
      ],
      "return": {
        "recipe": "string"
      }
    },
    {
      "function": "measure_heart_rate",
      "desc": "Measure heart rate using a health device, returning average HR.",
      "parameters": [
        {
          "name": "device_id",
          "type": "string",
          "desc": "ID or name of the health device (e.g. 'Fitbit123')."
        }
      ],
      "return": {
        "average_heart_rate": "number"
      }
    },
    {
      "function": "measure_blood_pressure",
      "desc": "Measure blood pressure using a health device, returning average BP.",
      "parameters": [
        {
          "name": "device_id",
          "type": "string",
          "desc": "ID or name of the health device (e.g. 'BPMonitorX')."
        }
      ],
      "return": {
        "average_blood_pressure": "string"
      }
    },
    {
      "function": "order_subway_tickets",
      "desc": "Purchase or recharge subway tickets.",
      "parameters": [
        {
          "name": "station_start",
          "type": "string",
          "desc": "Starting station (e.g. 'Times Square')."
        },
        {
          "name": "station_end",
          "type": "string",
          "desc": "Destination station (e.g. 'Grand Central')."
        },
        {
          "name": "ticket_type",
          "type": "string",
          "desc": "Ticket type (e.g. 'single', 'round-trip')."
        }
      ],
      "return": {
        "ticket_order_status": "string"
      }
    },
    {
      "function": "send_gift_card",
      "desc": "Send a gift card to someone's email.",
      "parameters": [
        {
          "name": "recipient_email",
          "type": "string",
          "desc": "Email address of the gift card recipient (e.g. 'jane@example.com')."
        },
        {
          "name": "amount",
          "type": "number",
          "desc": "Value of the gift card (e.g. 50)."
        },
        {
          "name": "message",
          "type": "string",
          "desc": "Optional greeting or message to include with the gift card."
        }
      ],
      "return": {
        "gift_card_status": "string"
      }
    },
    {
      "function": "create_budget_plan",
      "desc": "Generate a monthly budget plan from income and expense data.",
      "parameters": [
        {
          "name": "monthly_income",
          "type": "number",
          "desc": "Total monthly income (e.g. 3000)."
        },
        {
          "name": "fixed_expenses",
          "type": "string",
          "desc": "JSON or structured string listing fixed expenses (e.g. rent, utilities)."
        },
        {
          "name": "variable_expenses",
          "type": "string",
          "desc": "JSON or structured string listing variable expenses (e.g. groceries)."
        }
      ],
      "return": {
        "budget_plan": "string"
      }
    },
    {
      "function": "pay_utility_bill",
      "desc": "Pay a utility bill (electricity, water, gas).",
      "parameters": [
        {
          "name": "bill_type",
          "type": "string",
          "desc": "Type of utility bill (e.g. 'electricity')."
        },
        {
          "name": "amount",
          "type": "number",
          "desc": "Payment amount for the bill (e.g. 75)."
        },
        {
          "name": "account_number",
          "type": "string",
          "desc": "Billing account number (e.g. 'AC1234567')."
        }
      ],
      "return": {
        "bill_payment_status": "string"
      }
    },
    {
      "function": "locate_mobile_device",
      "desc": "Find the location of a lost mobile device by ID.",
      "parameters": [
        {
          "name": "device_id",
          "type": "string",
          "desc": "Unique identifier of the mobile device (e.g. 'PixelPhone123')."
        }
      ],
      "return": {
        "device_location": "string"
      }
    },
    {
      "function": "backup_files_cloud",
      "desc": "Backup specified files to a chosen cloud provider.",
      "parameters": [
        {
          "name": "file_list",
          "type": "string",
          "desc": "Comma-separated list of file paths to back up (e.g. 'docs/report.pdf,photos/vacation.jpg')."
        },
        {
          "name": "cloud_provider",
          "type": "string",
          "desc": "Cloud provider to use (e.g. 'Google Drive')."
        }
      ],
      "return": {
        "backup_status": "string"
      }
    },
    {
      "function": "subscribe_newsletter",
      "desc": "Register for an email newsletter about a certain topic.",
      "parameters": [
        {
          "name": "email",
          "type": "string",
          "desc": "Email address to subscribe (e.g. 'alex@example.com')."
        },
        {
          "name": "newsletter_topic",
          "type": "string",
          "desc": "Topic of the newsletter (e.g. 'technology')."
        }
      ],
      "return": {
        "subscription_status": "string"
      }
    },
    {
      "function": "redeem_coupon",
      "desc": "Apply a discount or offer by redeeming a coupon code.",
      "parameters": [
        {
          "name": "coupon_code",
          "type": "string",
          "desc": "The coupon code to redeem (e.g. 'SAVE10')."
        },
        {
          "name": "order_id",
          "type": "string",
          "desc": "Optional order number if the coupon applies to a specific order."
        }
      ],
      "return": {
        "redeem_status": "string"
      }
    },
    {
      "function": "play_podcast",
      "desc": "Play a specific podcast episode.",
      "parameters": [
        {
          "name": "podcast_name",
          "type": "string",
          "desc": "Name of the podcast (e.g. 'The Daily')."
        },
        {
          "name": "episode",
          "type": "string",
          "desc": "Episode number/title (optional, e.g. 'Episode 123: Market News')."
        }
      ],
      "return": {
        "podcast_status": "string"
      }
    },
    {
      "function": "check_package_size",
      "desc": "Verify if a package meets shipping size guidelines.",
      "parameters": [
        {
          "name": "length",
          "type": "number",
          "desc": "Length of the package in centimeters."
        },
        {
          "name": "width",
          "type": "number",
          "desc": "Width of the package in centimeters."
        },
        {
          "name": "height",
          "type": "number",
          "desc": "Height of the package in centimeters."
        }
      ],
      "return": {
        "size_check_result": "string"
      }
    },
    {
      "function": "request_emergency_services",
      "desc": "Contact emergency services about an incident.",
      "parameters": [
        {
          "name": "emergency_type",
          "type": "string",
          "desc": "Type of emergency (e.g. 'accident')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Address or place where the emergency occurred (e.g. '10 Main St.')."
        }
      ],
      "return": {
        "emergency_request_status": "string"
      }
    },
    {
      "function": "get_complaint_status",
      "desc": "Check the status of a previously filed complaint.",
      "parameters": [
        {
          "name": "complaint_id",
          "type": "string",
          "desc": "Reference or tracking number for the complaint (e.g. 'CPLT1001')."
        }
      ],
      "return": {
        "complaint_status": "string"
      }
    },
    {
      "function": "order_groceries",
      "desc": "Order groceries from a supermarket or online grocery store.",
      "parameters": [
        {
          "name": "items",
          "type": "string",
          "desc": "Comma-separated list of grocery items (e.g. 'apples,bananas,milk')."
        },
        {
          "name": "delivery_location",
          "type": "string",
          "desc": "Address or location for grocery delivery (e.g. '123 Main St.')."
        },
        {
          "name": "delivery_time",
          "type": "string",
          "desc": "Preferred delivery time in HH:MM (24-hour), e.g. '10:30' (optional)."
        }
      ],
      "return": {
        "grocery_order_status": "string"
      }
    },
    {
      "function": "request_maintenance",
      "desc": "Request repair or inspection of an item/facility at a location.",
      "parameters": [
        {
          "name": "item",
          "type": "string",
          "desc": "Name or description of the item needing repair (e.g. 'AC unit')."
        },
        {
          "name": "issue_description",
          "type": "string",
          "desc": "Detailed explanation of the problem (e.g. 'Not cooling properly')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "Address or place where the maintenance is needed (e.g. 'Unit 305')."
        }
      ],
      "return": {
        "maintenance_request_status": "string"
      }
    },
    {
      "function": "check_calendar",
      "desc": "Retrieve today's calendar events or schedule.",
      "parameters": [],
      "return": {
        "events": "string"
      }
    },
    {
      "function": "set_timer",
      "desc": "Set a countdown timer for a certain duration.",
      "parameters": [
        {
          "name": "minutes",
          "type": "number",
          "desc": "Number of minutes for the countdown (e.g. 30)."
        }
      ],
      "return": {
        "timer_status": "string"
      }
    },
    {
      "function": "open_app",
      "desc": "Open an application by name on the device.",
      "parameters": [
        {
          "name": "app_name",
          "type": "string",
          "desc": "Name of the application to open (e.g. 'Slack')."
        }
      ],
      "return": {
        "app_open_status": "string"
      }
    },
    {
      "function": "create_event",
      "desc": "Add an event to the calendar with a date/time.",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "desc": "Title or description of the event (e.g. 'Project Meeting')."
        },
        {
          "name": "date",
          "type": "string",
          "desc": "Date of the event in MM-DD format (e.g. '07-15')."
        },
        {
          "name": "time",
          "type": "string",
          "desc": "Time of the event in HH:MM (24-hour) format (e.g. '09:00')."
        }
      ],
      "return": {
        "event_status": "string"
      }
    },
    {
      "function": "measure_steps",
      "desc": "Track the daily step count using a health device/app.",
      "parameters": [
        {
          "name": "device_id",
          "type": "string",
          "desc": "ID or name of the step-tracking device/app (e.g. 'FitbitXYZ')."
        }
      ],
      "return": {
        "steps_count": "number"
      }
    },
    {
      "function": "get_shopping_deals",
      "desc": "Search for available deals or coupons for online/local shopping.",
      "parameters": [
        {
          "name": "store_name",
          "type": "string",
          "desc": "Name of the store or website to check deals for (e.g. 'Target')."
        }
      ],
      "return": {
        "available_deals": "string"
      }
    },
    {
      "function": "lookup_contact",
      "desc": "Look up a phone number or email address by contact name.",
      "parameters": [
        {
          "name": "contact_name",
          "type": "string",
          "desc": "Name of the contact (e.g. 'John Doe')."
        }
      ],
      "return": {
        "phone_number": "string",
        "email": "string"
      }
    },
    {
      "function": "call_contact",
      "desc": "Initiate a phone call to a contact by name.",
      "parameters": [
        {
          "name": "contact_name",
          "type": "string",
          "desc": "Name of the contact to call (e.g. 'John Doe')."
        }
      ],
      "return": {
        "call_status": "string"
      }
    },
    {
      "function": "check_public_holiday",
      "desc": "Check if a given date is a public holiday in a specified region.",
      "parameters": [
        {
          "name": "date",
          "type": "string",
          "desc": "Date in MM-DD format (e.g. '12-25') to check."
        },
        {
          "name": "region",
          "type": "string",
          "desc": "Country or region to check (e.g. 'US')."
        }
      ],
      "return": {
        "is_holiday": "boolean"
      }
    },
    {
      "function": "check_internet_speed",
      "desc": "Run an internet speed test and get the result.",
      "parameters": [],
      "return": {
        "download_speed_mbps": "number",
        "upload_speed_mbps": "number",
        "ping_ms": "number"
      }
    },
    {
      "function": "find_local_store",
      "desc": "Find a local physical store by name or type in a given area.",
      "parameters": [
        {
          "name": "store_name",
          "type": "string",
          "desc": "Name or type of the store (e.g. 'grocery')."
        },
        {
          "name": "location",
          "type": "string",
          "desc": "City or region to search in (e.g. 'Houston')."
        }
      ],
      "return": {
        "store_info": "string"
      }
    },
    {
      "function": "order_coffee",
      "desc": "Place a coffee order at a nearby cafe.",
      "parameters": [
        {
          "name": "cafe_name",
          "type": "string",
          "desc": "Name of the cafe (e.g. 'Starbucks')."
        },
        {
          "name": "coffee_type",
          "type": "string",
          "desc": "Type of coffee (e.g. 'latte')."
        }
      ],
      "return": {
        "order_status": "string"
      }
    },
    {
      "function": "create_todo_list",
      "desc": "Create a new to-do list with a given title.",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "desc": "Title for the new to-do list (e.g. 'Weekend Tasks')."
        }
      ],
      "return": {
        "todo_list_status": "string"
      }
    },
    {
      "function": "add_todo_item",
      "desc": "Add an item to an existing to-do list.",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "desc": "Name of the to-do list to add the item to (e.g. 'Weekend Tasks')."
        },
        {
          "name": "item",
          "type": "string",
          "desc": "Task or item to add (e.g. 'Buy groceries')."
        }
      ],
      "return": {
        "todo_list_status": "string"
      }
    },
    {
      "function": "mark_todo_item_done",
      "desc": "Mark an item as completed in a to-do list.",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "desc": "Name of the to-do list containing the item (e.g. 'Weekend Tasks')."
        },
        {
          "name": "item",
          "type": "string",
          "desc": "Task or item to mark as done (e.g. 'Buy groceries')."
        }
      ],
      "return": {
        "done_status": "string"
      }
    },
    {
      "function": "connect_wifi",
      "desc": "Connect to a Wi-Fi network by SSID and password.",
      "parameters": [
        {
          "name": "ssid",
          "type": "string",
          "desc": "Wi-Fi network name (SSID) (e.g. 'MyHomeWiFi')."
        },
        {
          "name": "password",
          "type": "string",
          "desc": "Wi-Fi network password (e.g. 'mypassword123')."
        }
      ],
      "return": {
        "connection_status": "string"
      }
    },
    {
      "function": "open_browser",
      "desc": "Open the default web browser to a specified URL.",
      "parameters": [
        {
          "name": "url",
          "type": "string",
          "desc": "Web address to open (e.g. 'https://www.google.com')."
        }
      ],
      "return": {
        "browser_status": "string"
      }
    },
    {
      "function": "check_battery",
      "desc": "Check the device's battery level.",
      "parameters": [],
      "return": {
        "battery_level_percent": "number"
      }
    },
    {
      "function": "organize_photos",
      "desc": "Sort or arrange photos into albums based on a criterion (e.g. date).",
      "parameters": [
        {
          "name": "album_name",
          "type": "string",
          "desc": "Name of the photo album to create or use (e.g. 'Vacation 2023')."
        },
        {
          "name": "criterion",
          "type": "string",
          "desc": "Criterion for sorting (e.g. 'date', 'location')."
        }
      ],
      "return": {
        "organize_status": "string"
      }
    },
    {
      "function": "clean_notification",
      "desc": "Clear old or read notifications from the device.",
      "parameters": [],
      "return": {
        "clear_status": "string"
      }
    }
  ],
  "links": [
    {
      "source": "find_restaurants",
      "target": "book_restaurant"
    },
    {
      "source": "book_restaurant",
      "target": "set_alarm"
    },
    {
      "source": "find_hotel",
      "target": "book_hotel"
    },
    {
      "source": "book_hotel",
      "target": "set_alarm"
    },
    {
      "source": "find_car",
      "target": "book_car"
    },
    {
      "source": "book_car",
      "target": "set_alarm"
    },
    {
      "source": "book_flight",
      "target": "set_alarm"
    },
    {
      "source": "recommend_recipe",
      "target": "order_food_delivery"
    },
    {
      "source": "recommend_recipe",
      "target": "order_food_dinein"
    },
    {
      "source": "book_hotel",
      "target": "create_event"
    },
    {
      "source": "book_restaurant",
      "target": "create_event"
    },
    {
      "source": "recommend_recipe",
      "target": "set_reminder"
    },
    {
      "source": "lookup_contact",
      "target": "send_sms"
    },
    {
      "source": "lookup_contact",
      "target": "call_contact"
    },
    {
      "source": "book_car",
      "target": "set_alarm"
    },
    {
      "source": "book_flight",
      "target": "schedule_appointment"
    },
    {
      "source": "order_food_delivery",
      "target": "set_alarm"
    },
    {
      "source": "book_hotel",
      "target": "share_by_social_network"
    },
    {
      "source": "recommend_recipe",
      "target": "order_groceries"
    },
    {
      "source": "recommend_recipe",
      "target": "add_item"
    },
    
    {
      "source": "get_weather",
      "target": "send_sms"
    },
    {
      "source": "get_weather",
      "target": "share_by_social_network"
    },
    {
      "source": "get_weather",
      "target": "take_note"
    },
    {
      "source": "get_weather",
      "target": "search_by_engine"
    },
    {
      "source": "get_news_for_topic",
      "target": "take_note"
    },
    {
      "source": "get_news_for_topic",
      "target": "share_by_social_network"
    },
    {
      "source": "get_news_for_topic",
      "target": "send_email"
    },
    {
      "source": "get_crypto_price",
      "target": "convert_currency"
    },
    {
      "source": "get_stock_price",
      "target": "buy_stock"
    },
    {
      "source": "buy_stock",
      "target": "set_reminder"
    },
    {
      "source": "sell_stock",
      "target": "set_reminder"
    },
    {
      "source": "get_shopping_deals",
      "target": "shop_online"
    },
    {
      "source": "shop_online",
      "target": "pay_for_credit_card"
    },
    {
      "source": "check_balance",
      "target": "withdraw_cash"
    },
    {
      "source": "check_balance",
      "target": "pay_for_credit_card"
    },
    {
      "source": "pay_for_credit_card",
      "target": "take_note"
    },
    {
      "source": "subscribe_newsletter",
      "target": "send_email"
    },
    {
      "source": "find_local_store",
      "target": "set_reminder"
    },
    {
      "source": "find_local_store",
      "target": "request_maintenance"
    },
    {
      "source": "check_calendar",
      "target": "make_video_call"
    },
    {
      "source": "check_calendar",
      "target": "set_reminder"
    },
    {
      "source": "check_internet_speed",
      "target": "send_sms"
    },
    {
      "source": "borrow_book_online",
      "target": "take_note"
    },
    {
      "source": "measure_heart_rate",
      "target": "set_reminder"
    },
    {
      "source": "measure_blood_pressure",
      "target": "set_reminder"
    },
    {
      "source": "track_parcel",
      "target": "send_sms"
    },
    {
      "source": "track_parcel",
      "target": "share_by_social_network"
    },
    {
      "source": "track_parcel",
      "target": "take_note"
    },
    {
      "source": "measure_steps",
      "target": "set_alarm"
    },
    {
      "source": "track_water_intake",
      "target": "set_reminder"
    },
    {
      "source": "track_water_intake",
      "target": "share_by_social_network"
    },
    {
      "source": "create_fitness_plan",
      "target": "set_reminder"
    },
    {
      "source": "monitor_expenses",
      "target": "schedule_appointment"
    },
    {
      "source": "measure_heart_rate",
      "target": "take_note"
    },
    {
      "source": "measure_blood_pressure",
      "target": "take_note"
    },
    {
      "source": "find_local_event",
      "target": "create_event"
    },
    {
      "source": "find_local_event",
      "target": "share_by_social_network"
    },
    {
      "source": "redeem_coupon",
      "target": "shop_online"
    },
    {
      "source": "shop_online",
      "target": "set_reminder"
    },
    {
      "source": "shop_online",
      "target": "add_item"
    },
    {
      "source": "sell_item_online",
      "target": "share_by_social_network"
    },
    {
      "source": "connect_bluetooth_device",
      "target": "play_music"
    },
    {
      "source": "play_music",
      "target": "set_timer"
    },
    {
      "source": "play_movie",
      "target": "set_timer"
    },
    {
      "source": "get_movie_recommendation",
      "target": "play_movie"
    },
    {
      "source": "measure_heart_rate",
      "target": "share_by_social_network"
    },
    {
      "source": "measure_blood_pressure",
      "target": "share_by_social_network"
    },
    {
      "source": "measure_steps",
      "target": "share_by_social_network"
    },
    {
      "source": "play_podcast",
      "target": "set_timer"
    },
    {
      "source": "track_parcel",
      "target": "set_reminder"
    },
    {
      "source": "pay_utility_bill",
      "target": "take_note"
    },
    {
      "source": "pay_utility_bill",
      "target": "share_by_social_network"
    },
    {
      "source": "create_event",
      "target": "set_alarm"
    },
    {
      "source": "monitor_expenses",
      "target": "take_note"
    },
    {
      "source": "create_event",
      "target": "set_reminder"
    },
    {
      "source": "get_weather",
      "target": "send_email"
    },
    {
      "source": "check_flight_status",
      "target": "share_by_social_network"
    },
    {
      "source": "translate_text",
      "target": "send_email"
    },
    {
      "source": "translate_text",
      "target": "share_by_social_network"
    },
    {
      "source": "get_movie_recommendation",
      "target": "share_by_social_network"
    },
    {
      "source": "get_music_recommendation",
      "target": "share_by_social_network"
    },
    {
      "source": "measure_steps",
      "target": "take_note"
    },
    {
      "source": "check_battery",
      "target": "share_by_social_network"
    },
    {
      "source": "deliver_package",
      "target": "set_reminder"
    },
    {
      "source": "order_subway_tickets",
      "target": "set_alarm"
    },
    {
      "source": "check_traffic",
      "target": "set_alarm"
    },
    {
      "source": "check_traffic",
      "target": "set_reminder"
    },
    {
      "source": "print_document",
      "target": "take_note"
    },
    {
      "source": "monitor_expenses",
      "target": "pay_utility_bill"
    },
    {
      "source": "create_event",
      "target": "set_reminder"
    },
    {
      "source": "deliver_package",
      "target": "set_reminder"
    },
    {
      "source": "find_local_store",
      "target": "set_alarm"
    },
    {
      "source": "subscribe_newsletter",
      "target": "share_by_social_network"
    },
    {
      "source": "connect_bluetooth_device",
      "target": "set_alarm"
    },
    {
      "source": "order_subway_tickets",
      "target": "set_reminder"
    },
    {
      "source": "get_weather",
      "target": "set_reminder"
    },
    {
      "source": "search_by_engine",
      "target": "share_by_social_network"
    },
    {
      "source": "search_by_engine",
      "target": "take_note"
    },
    {
      "source": "deliver_package",
      "target": "take_note"
    },
    {
      "source": "monitor_expenses",
      "target": "shop_online"
    },
    {
      "source": "measure_heart_rate",
      "target": "create_fitness_plan"
    },
    {
      "source": "measure_blood_pressure",
      "target": "create_fitness_plan"
    },
    {
      "source": "order_food_delivery",
      "target": "summarize_text"
    },
    {
      "source": "order_food_dinein",
      "target": "take_note"
    },
    {
      "source": "lookup_contact",
      "target": "make_voice_call"
    },
    {
      "source": "find_restaurants",
      "target": "take_note"
    },
    {
      "source": "borrow_book_online",
      "target": "share_by_social_network"
    },
    {
      "source": "find_local_event",
      "target": "set_reminder"
    },
    {
      "source": "attend_meeting_online",
      "target": "take_note"
    },
    {
      "source": "organize_meeting_online",
      "target": "set_reminder"
    },
    {
      "source": "schedule_appointment",
      "target": "share_by_social_network"
    },
    {
      "source": "convert_currency",
      "target": "take_note"
    },
    {
      "source": "convert_currency",
      "target": "send_sms"
    },
    {
      "source": "sell_item_online",
      "target": "take_note"
    },
    {
      "source": "book_flight",
      "target": "create_event"
    },
    {
      "source": "order_coffee",
      "target": "take_note"
    },
    {
      "source": "recording_audio",
      "target": "share_by_social_network"
    }
  ]
}